definition {

	macro addComment {
		Type(
			locator1 = "PublicationsChanges#COMMENT_BODY",
			value1 = "${commentValue}");

		AssertClick(
			locator1 = "Button#REPLY",
			value1 = "Reply");

		AssertElementPresent(
			key_commentValue = "${commentValue}",
			locator1 = "PublicationsChanges#COMMENT_ACTIONS");
	}

	macro assertPublicationsCommentsCRUDPermissions {
		PublicationsChanges.openCommentsSidebar();

		PublicationsChanges.addComment(commentValue = "Good to Publish");

		PublicationsChanges.editComment(
			commentValue = "Good to Publish",
			commentValueEdit = "It is not ready to Publish",
			userName = "Test Test");

		PublicationsChanges.deleteComment(commentValue = "It is not ready to Publish");
	}

	macro changeDisplayStyle {
		Click(locator1 = "PublicationsChanges#CURRENT_DISPLAY_STYLE");

		MenuItem.click(menuItem = StringUtil.upperCaseFirstLetter("${displayStyle}"));
	}

	macro deleteComment {
		Click.mouseOverClick(
			key_commentValue = "${commentValue}",
			locator1 = "PublicationsChanges#COMMENT_ACTIONS");

		AssertClickNoError(
			key_menuItem = "Delete",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Delete");

		AssertElementPresent(locator1 = "PublicationsChanges#COMMENT_DELETING_MESSAGE");

		Click.javaScriptClick(locator1 = "Button#DELETE");

		AssertTextNotPresent(value1 = "${commentValue}");
	}

	macro discardChanges {
		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		if ("${conflictingChanges}" == "true") {
			Click(
				key_entryTitle = "${entryTitle}",
				locator1 = "Publications#CONFLICTING_CHANGES_DISCARD_ELLIPSIS");

			MenuItem.click(menuItem = "Discard Change");
		}
		else {
			var key_changeCategory = "${changeCategory}";
			var key_changeTitle = "${changeTitle}";

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE");

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_ELLIPSIS");

			MenuItem.click(menuItem = "Discard");
		}

		AssertElementPresent(locator1 = "Publications#DISCARDED_CHANGES_TITLE");

		var key_changeCategory = "${changeCategory}";
		var key_changeTitle = "${changeTitle}";

		while (IsElementNotPresent(locator1 = "PublicationsChanges#CONTEXT_CHANGE_TITLE")) {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		Click(
			key_text = "Discard",
			locator1 = "Button#ANY");

		Alert.viewSuccessMessage();
	}

	macro editComment {
		Click.mouseOverClick(
			key_commentValue = "${commentValue}",
			locator1 = "PublicationsChanges#COMMENT_ACTIONS");

		MenuItem.click(menuItem = "Edit");

		Type.clickAtType(
			key_userName = "${userName}",
			locator1 = "PublicationsChanges#COMMENT_BODY_SPECIFIC",
			value1 = "${commentValueEdit}");

		SelectFrame(value1 = "relative=top");

		Click.javaScriptClick(locator1 = "Button#SAVE");

		AssertElementPresent(
			key_commentValue = "${commentValueEdit}",
			locator1 = "PublicationsChanges#COMMENT_VALUE",
			value1 = "${commentValueEdit}");
	}

	macro gotoEditChanges {
		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		if ("${conflictingChanges}" == "true") {
			Click(
				key_entryTitle = "${entryTitle}",
				locator1 = "Publications#CONFLICTING_CHANGES_DISCARD_ELLIPSIS");

			MenuItem.click(menuItem = "Edit Item");
		}
		else {
			var key_changeCategory = "${changeCategory}";
			var key_changeTitle = "${changeTitle}";

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE");

			Click(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_ELLIPSIS");

			MenuItem.click(menuItem = "Edit");
		}
	}

	macro openCommentsSidebar {
		Click.javaScriptClick(locator1 = "PublicationsChanges#COMMENT_BUTTON");
	}

	macro sortChanges {
		Click(
			key_name = "${sortName}",
			locator1 = "PublicationsChanges#SORT_BUTTON");

		if ("${sort}" == "descending") {
			if (IsElementPresent(locator1 = "PublicationsChanges#SORTED_ASCENDING_ICON")) {
				Click(locator1 = "PublicationsChanges#SORTED_ASCENDING_ICON");
			}
		}

		if ("${sort}" == "ascending") {
			if (IsElementPresent(locator1 = "PublicationsChanges#SORTED_DESCENDING_ICON")) {
				Click(locator1 = "PublicationsChanges#SORTED_DESCENDING_ICON");
			}
		}
	}

	macro viewChangeDiff {
		if ("${entryDeletedInProduction}" == "true") {
			AssertTextEquals(
				key_displayItem = "Split View",
				locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
				value1 = "Split View");
		}
		else {
			AssertTextEquals(
				key_displayItem = "Unified View",
				locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
				value1 = "Unified View");
		}

		var key_columnName = "${columnName}";

		if (isSet(diffAddedValue)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Publications#DIFF_ADDED_VALUE",
				value1 = "${diffAddedValue}");
		}

		if (isSet(diffRemovedValue)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Publications#DIFF_REMOVED_VALUE",
				value1 = "${diffRemovedValue}");
		}

		Publications.changeDiffDisplayItem(displayItem = "Production");

		if ("${entryDeletedInProduction}" == "true") {
			Alert.viewErrorMessage(errorMessage = "This item is missing or is deleted.");
		}
		else {
			AssertTextEquals(
				key_displayItem = "Production",
				locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
				value1 = "Production");

			if (isSet(columnValueInProduction)) {
				key_columnValueInProduction = "${columnValueInProduction}";

				AssertTextEquals.assertPartialText(
					locator1 = "Publications#COLUMN_VALUE_IN_PRODUCTION",
					value1 = "${columnValueInProduction}");
			}
		}

		Publications.changeDiffDisplayItem(displayItem = "Publication");

		if (isSet(columnValueInPublication)) {
			key_columnValueInPublication = "${columnValueInPublication}";

			AssertTextEquals.assertPartialText(
				locator1 = "Publications#COLUMN_VALUE_IN_PUBLICATION",
				value1 = "${columnValueInPublication}");
		}
	}

	macro viewChangesResultNotPresent {
		var key_changeCategory = "${changeCategory}";
		var key_changeTitle = "${changeTitle}";

		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		AssertElementNotPresent(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
			value1 = "${changeTitle}");
	}

	macro viewChangesResultsOrder {
		var changeOrder = "0";

		for (var changeTitle : list "${changesList}") {
			var changeOrder = ${changeOrder} + 1;

			var key_changeCategory = "${changeCategory}";
			var key_changeTitle = "${changeTitle}";

			AssertTextEquals(
				changeOrder = "${changeOrder}",
				locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
				value1 = "${changeTitle}");
		}
	}

	macro viewChangesViaChangesStyle {
		if ("${publishedPublication}" == "true") {
			Click(
				key_publicationName = "${publicationName}",
				locator1 = "Publications#PUBLISHED_PUBLICATION_NAME");
		}
		else {
			PublicationsChanges.changeDisplayStyle(displayStyle = "Changes");
		}

		WaitForElementPresent(locator1 = "PublicationsChanges#CHANGE_HEADER");

		if ("${showAllItems}" == "true") {
			Check.checkToggleSwitch(locator1 = "PublicationsChanges#SHOW_ALL_ITEMS_TOGGLE_SWITCH");
		}

		var key_changeCategory = "${changeCategory}";
		var key_changeUser = "${changeUser}";
		var key_changeSite = "${changeSite}";
		var key_changeTitle = "${changeTitle}";
		var key_changeType = "${changeType}";

		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		while (IsElementNotPresent(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_USER")) {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_SITE",
			value1 = "${changeSite}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
			value1 = "${changeTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TYPE",
			value1 = "${changeType}");
	}

	macro viewChangesViaContextStyle {
		PublicationsChanges.changeDisplayStyle(displayStyle = "Context");

		if ("${showAllItems}" == "true") {
			Check.checkToggleSwitch(locator1 = "PublicationsChanges#SHOW_ALL_ITEMS_TOGGLE_SWITCH");
		}

		var key_changeCategory = "${changeCategory}";
		var key_changeDescription = "${changeDescription}";
		var key_changeTitle = "${changeTitle}";

		Click.javaScriptClick(locator1 = "PublicationsChanges#CONTEXT_CHANGE_CATEGORY_RADIO");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#CONTEXT_CHANGE_TITLE",
			value1 = "${changeTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#CONTEXT_CHANGE_DESCRIPTION",
			value1 = "${changeDescription}");
	}

	macro viewDDLRecordChangeDiff {
		if (IsElementNotPresent(locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM", key_displayItem = "Unified View")) {
			Publications.changeDiffDisplayItem(displayItem = "Unified View");
		}

		var key_fieldName = "${fieldName}";

		if (isSet(diffAddedValue)) {
			key_diffAddedValue = "${diffAddedValue}";

			AssertElementPresent(
				locator1 = "PublicationsChanges#DDL_RECORD_DIFF_ADDED_VALUE",
				value1 = "${diffAddedValue}");
		}

		Publications.changeDiffDisplayItem(displayItem = "Production");

		AssertTextEquals(
			key_displayItem = "Production",
			locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
			value1 = "Production");

		if (isSet(fieldValueInProduction)) {
			key_fieldValueInProduction = "${fieldValueInProduction}";

			AssertElementPresent(
				locator1 = "PublicationsChanges#FIELD_VALUE_IN_PRODUCTION",
				value1 = "${fieldValueInProduction}");
		}

		Publications.changeDiffDisplayItem(displayItem = "Publication");

		AssertTextEquals.assertPartialText(
			key_displayItem = "${publicationName}",
			locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
			value1 = "${publicationName}");

		if (isSet(fieldValueInPublication)) {
			key_fieldValueInPublication = "${fieldValueInPublication}";

			AssertElementPresent(
				locator1 = "PublicationsChanges#FIELD_VALUE_IN_PUBLICATION",
				value1 = "${fieldValueInPublication}");
		}
	}

}